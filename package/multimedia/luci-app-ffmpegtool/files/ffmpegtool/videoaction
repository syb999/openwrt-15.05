#!/bin/sh
. /usr/ffmpegtool/commonfunc

testdestpath

param_format="$(uci get ffmpegtool.@ffmpegtool[0].video_format)"
param_libx2645=""
param_starttime=""
param_endtime=""
param_mute=""
param_frames_num=""
param_horizontally=""
param_upanddown=""
param_rotation=""
param_fuzzy=""
param_crisp=""
param_halfsize=""
param_duration=""
param_crop=""
param_blackandwhite=""
param_copy=""
param_fix_android=""

if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_x2645)" == "libx264" ];then
	param_libx2645="-vcodec libx264"
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].video_x2645)" == "libx265" ];then
	param_libx2645="-vcodec libx265"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_preset)" == "ultrafast" ];then
	param_preset="-preset ultrafast"
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].video_preset)" == "fast" ];then
	param_preset="-preset fast"
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].video_preset)" == "medium" ];then
	param_preset="-preset medium"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_mute)" == "1" ];then
	param_mute="-an"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_frames)" == "1" ];then
	param_frames_num="-r $(uci get ffmpegtool.@ffmpegtool[0].video_frames_num)"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_horizontally)" == "1" ];then
	param_horizontally="hflip,"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_upanddown)" == "1" ];then
	param_upanddown="vflip,"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_rotation)" == "1" ];then
	param_rotation="transpose=2,"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].horizontal_symmetrical)" == "1" ];then
	param_rotation="[0:v]pad=w=2*iw[a];[0:v]hflip[b];[a][b]overlay=x=w,"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].vertically_symmetrical)" == "1" ];then
	param_rotation="[0:v]pad=h=2*ih[a];[0:v]vflip[b];[a][b]overlay=y=h,"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].fuzzy_processing)" == "1" ];then
	param_fuzzy="boxblur=1:10:4:10,"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].crisp_enhancement)" == "1" ];then
	param_crisp="unsharp=5:5:1.0:5:5:0.0,"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_halfsize)" == "1" ];then
	param_halfsize="scale=iw/2:ih/2,"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_crop)" == "1" ];then
	param_crop="$(uci get ffmpegtool.@ffmpegtool[0].video_crop),"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_blackandwhite)" == "1" ];then
	param_blackandwhite="hue=s=0"
	effects_param="$param_horizontally$param_upanddown$param_rotation$param_fuzzy$param_crisp$param_halfsize$param_crop$param_blackandwhite"
else
	effects_param="$(echo $param_horizontally$param_upanddown$param_rotation$param_fuzzy$param_crisp$param_halfsize$param_crop$param_blackandwhite | sed 's/,$//')"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_separate)" == "1" ];then
	bar_size="$(uci get ffmpegtool.@ffmpegtool[0].video_separate_size)"
	reduced_pixel="$(expr ${bar_size} / 2)"
	bar_color="$(uci get ffmpegtool.@ffmpegtool[0].video_separate_color)$(uci get ffmpegtool.@ffmpegtool[0].video_separate_color_transparency)"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_expan)" == "1" ];then
	expand_size="$(uci get ffmpegtool.@ffmpegtool[0].video_expand_size)"
	expand_color="$(uci get ffmpegtool.@ffmpegtool[0].video_expand_color)"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].v_modify_duration)" == "only configure duration" ];then
	param_duration="-t $(uci get ffmpegtool.@ffmpegtool[0].vide_duration)"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_copy)" == "1" ];then
	param_copy="-vcodec copy"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].fix_android)" == "1" ];then
	param_fix_android="-pix_fmt yuv420p"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].dest_select)" == "streaming media server" ];then
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].src_select)" == "one file" ];then
		while true;do
			srctarget="$(uci get ffmpegtool.@ffmpegtool[0].src_file_path)"
			ffprobe "$srctarget" > /tmp/ffmpeg.log 2>&1
			echo "$srctarget ---- 推流中..." >> /tmp/ffmpeg.log
			if [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "rtmp server" ];then
				ffmpeg -re -i "$srctarget" $param_preset -vcodec copy -f flv "$(uci get ffmpegtool.@ffmpegtool[0].rtmp_server_url)"
			elif [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "icecast server" ];then
				ffmpeg -re -i "$srctarget" $param_preset -vn -f mp3 "$(uci get ffmpegtool.@ffmpegtool[0].icecast_server_url)"
			fi
		done
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].src_select)" == "all files in the directory" ];then
		srctarget="$(ls $(uci get ffmpegtool.@ffmpegtool[0].src_directory_path))"
		while true;do
			for i in $srctarget;do
				ffprobe "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" > /tmp/ffmpeg.log 2>&1
				echo "$i ---- 推流中..." >> /tmp/ffmpeg.log
				if [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "rtmp server" ];then
					ffmpeg -re -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" $param_preset -vcodec copy -f flv "$(uci get ffmpegtool.@ffmpegtool[0].rtmp_server_url)"
				elif [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "icecast server" ];then
					ffmpeg -re -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" $param_preset -vn -f mp3 "$(uci get ffmpegtool.@ffmpegtool[0].icecast_server_url)"
				fi
			done
		done
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].src_select)" == "streaming media" ];then
		while true;do
			srctarget="$(uci get ffmpegtool.@ffmpegtool[0].src_stream_path)"
			ffprobe "$srctarget" > /tmp/ffmpeg.log 2>&1
			echo "$srctarget ---- 推流中..." >> /tmp/ffmpeg.log
			if [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "rtmp server" ];then
				ffmpeg -i "$srctarget" $param_preset -vcodec copy -f flv "$(uci get ffmpegtool.@ffmpegtool[0].rtmp_server_url)"
			elif [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "icecast server" ];then
				ffmpeg -i "$srctarget" $param_preset -vn -f mp3 "$(uci get ffmpegtool.@ffmpegtool[0].icecast_server_url)"
			fi
		done
	fi
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].enable_merge)" == "left and right" ];then
	input1=$(uci get ffmpegtool.@ffmpegtool[0].screen_input1)
	input2=$(uci get ffmpegtool.@ffmpegtool[0].screen_input2)
	ffprobe "$input1" > /tmp/ffmpeg.log 2>&1
	time_work_v
	echo " $input1 ----> 视频合并中 <---- $input2 " >> /tmp/ffmpeg.log
	ffmpeg -i "$input1" -vf "[in] scale=iw/2:ih/2,pad=2*iw:ih [left];movie='${input2}',scale=iw/2:ih/2 [right];[left][right] overlay=main_w/2:0 [out]" $param_mute $param_frames_num $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$(date +%s).$param_format" -y
	echo "合并完毕!" >> /tmp/ffmpeg.log
	ucidefault
	exit 0
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].enable_merge)" == "top and bottom" ];then
	input1=$(uci get ffmpegtool.@ffmpegtool[0].screen_input1)
	input2=$(uci get ffmpegtool.@ffmpegtool[0].screen_input2)
	ffprobe "$input1" > /tmp/ffmpeg.log 2>&1
	time_work_v
	echo " $input1 ----> 视频合并中 <---- $input2 " >> /tmp/ffmpeg.log
	ffmpeg -i "$input1" -vf "[in] scale=iw/2:ih/2,pad=iw:2*ih [top];movie='${input2}',scale=iw/2:ih/2 [bottom];[top][bottom] overlay=0:main_h/2 [out]" $param_mute $param_frames_num $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$(date +%s).$param_format" -y
	echo "合并完毕!" >> /tmp/ffmpeg.log
	ucidefault
	exit 0
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].enable_merge)" == "merge video and audio" ];then
	input1=$(uci get ffmpegtool.@ffmpegtool[0].screen_input1)
	input2=$(uci get ffmpegtool.@ffmpegtool[0].screen_input2)
	ffprobe "$input1" > /tmp/ffmpeg.log 2>&1
	time_work_v
	echo " $input1 ----> 视音频合并中 <---- $input2 " >> /tmp/ffmpeg.log
	ffmpeg -i $input1 -i $input2 -map 0:v -map 1:a $param_libx2645 $param_preset "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$(date +%s).$param_format" -y
	echo "合并完毕!" >> /tmp/ffmpeg.log
	ucidefault
	exit 0
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].enable_merge)" == "merge video to picture" ];then
	inputpic=$(uci get ffmpegtool.@ffmpegtool[0].screen_picture)
	input1=$(uci get ffmpegtool.@ffmpegtool[0].screen_input1)
	input2=$(uci get ffmpegtool.@ffmpegtool[0].screen_input2)
	ffprobe "$input1" > /tmp/ffmpeg.log 2>&1
	time_work_v
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].picture_merge)" == "one video and one picture" ];then
		customresolution="$(uci get ffmpegtool.@ffmpegtool[0].picture_custom_1)"
		custompixel="$(uci get ffmpegtool.@ffmpegtool[0].picture_custom_3)"
		echo " $input1 ----> 视频合并到图片上 <---- $inputpic " >> /tmp/ffmpeg.log
		ffmpeg -loop 1 -i "$inputpic" -i "$input1" -filter_complex "[1:0]scale=${customresolution}[a];[0:0][a]overlay=${custompixel}" $param_mute $param_frames_num $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$(date +%s).$param_format" -y
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].picture_merge)" == "two videos and one picture" ];then
		customresolution="$(uci get ffmpegtool.@ffmpegtool[0].picture_custom_1)"
		customresolution2="$(uci get ffmpegtool.@ffmpegtool[0].picture_custom_2)"
		custompixel="$(uci get ffmpegtool.@ffmpegtool[0].picture_custom_3)"
		custompixel2="$(uci get ffmpegtool.@ffmpegtool[0].picture_custom_4)"
		echo " $input1 ----> 视频合并到图片上 <---- $inputpic " >> /tmp/ffmpeg.log
		ffmpeg -loop 1 -i "$inputpic" -i "$input1" -i "$input2" -filter_complex "[1:0]scale=${customresolution}[a];[2:0]scale=${customresolution2}[b];[0:0][a]overlay=${custompixel}[c];[c][b]overlay=${custompixel2}" $param_mute $param_frames_num $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$(date +%s).$param_format" -y
	fi
	echo "合并完毕!" >> /tmp/ffmpeg.log
	ucidefault
	exit 0
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].enable_merge)" == "merge picture onto video" ];then
	video_input=$(uci get ffmpegtool.@ffmpegtool[0].merge_new_input1)
	pic_input=$(uci get ffmpegtool.@ffmpegtool[0].merge_new_input2)
	overlay_coordinate="$(uci get ffmpegtool.@ffmpegtool[0].merge_new_coordinate)"
	ffprobe "$input1" > /tmp/ffmpeg.log 2>&1
	time_work_v
	echo " $input1 ----> 视频合并中 <---- $input2 " >> /tmp/ffmpeg.log
	ffmpeg $param_starttime $param_endtime -i "${video_input}" -i "${pic_input}" -filter_complex "[0:v][1:v] overlay=${overlay_coordinate}" $param_mute $param_frames_num $param_libx2645 $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$(date +%s).$param_format" -y
	echo "合并完毕!" >> /tmp/ffmpeg.log
	ucidefault
	exit 0
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].enable_merge)" == "one by one" ];then
	input1=$(uci get ffmpegtool.@ffmpegtool[0].screen_input1)
	input2=$(uci get ffmpegtool.@ffmpegtool[0].screen_input2)
	ffprobe "$input1" > /tmp/ffmpeg.log 2>&1
	time_work_v
	echo " $input1 ----> 视频合并中 <---- $input2 " >> /tmp/ffmpeg.log
	echo -e "file '$input1'\nfile '$input2'\n" > /tmp/ffmpeg.filelist
	ffmpeg -f concat -safe 0 -i /tmp/ffmpeg.filelist $param_mute $param_libx2645 $param_preset $param_copy $param_fix_android "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$(date +%s).$param_format" -y
	echo "合并完毕!" >> /tmp/ffmpeg.log
	ucidefault
	exit 0
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].enable_merge)" == "overlay in the middle" ];then
	input1=$(uci get ffmpegtool.@ffmpegtool[0].screen_input1)
	input2=$(uci get ffmpegtool.@ffmpegtool[0].screen_input2)
	ffprobe "$input1" > /tmp/ffmpeg.log 2>&1
	time_work_v
	echo " $input1 ----> 视频合并中 <---- $input2 " >> /tmp/ffmpeg.log
	ffmpeg -i "$input1" -i "$input2" -filter_complex "[0:v]pad=w=iw[a];[1:v]scale=iw/2:-1[b];[a][b]overlay=w/2:h/2" $param_mute $param_frames_num $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$(date +%s).$param_format" -y
	echo "合并完毕!" >> /tmp/ffmpeg.log
	ucidefault
	exit 0
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].enable_merge)" == "custom overley" ];then
	input1=$(uci get ffmpegtool.@ffmpegtool[0].screen_input1)
	input2=$(uci get ffmpegtool.@ffmpegtool[0].screen_input2)
	customresolution=$(uci get ffmpegtool.@ffmpegtool[0].video_custom_1)
	custompixel=$(uci get ffmpegtool.@ffmpegtool[0].video_custom_2)
	ffprobe "$input1" > /tmp/ffmpeg.log 2>&1
	time_work_v
	echo " $input1 ----> 视频合并中 <---- $input2 " >> /tmp/ffmpeg.log
	ffmpeg -i "$input1" -i "$input2" -filter_complex "[0:v]pad=w=iw[a];[1:v]scale=${customresolution}[b];[a][b]overlay=${custompixel}" $param_mute $param_frames_num $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$(date +%s).$param_format" -y
	echo "合并完毕!" >> /tmp/ffmpeg.log
	ucidefault
	exit 0
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].ptv_one)" == "1" ];then
	input=$(uci get ffmpegtool.@ffmpegtool[0].src_file_path)
	pictovideo
	ucidefault
	exit 0
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].ptv_multi)" == "1" ];then
	mergtime="$(date +%s)"
	for pic in $(ls $(uci get ffmpegtool.@ffmpegtool[0].src_directory_path));do
		input="$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$pic"
		pictovideo
		cat $(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$pic.tmp.ts >> $(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$mergtime.tmp.ts
		rm $(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$pic.tmp.ts >/dev/null 2>&1
	done
	echo " 视频流更新中，请等待... " >> /tmp/ffmpeg.log
	ffmpeg -i "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$mergtime.tmp.ts" $param_preset "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$mergtime.$param_format"
	echo " 更新完毕! " >> /tmp/ffmpeg.log
	rm $(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$mergtime.tmp.ts >/dev/null 2>&1
	ucidefault
	exit 0
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].src_select)" == "one file" ];then
	srctarget="$(uci get ffmpegtool.@ffmpegtool[0].src_file_path)"
	ffprobe "$srctarget" > /tmp/ffmpeg.log 2>&1
	time_work_v
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_picture)" == "1" ];then 
		echo "$srctarget ---- 导出图片中..." >> /tmp/ffmpeg.log
		if [ "$(uci get ffmpegtool.@ffmpegtool[0].image_effects)" == "1" ];then
			ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_mute $param_frames_num -filter_complex $effects_param $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/image-%03d.jpg" -y
			ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_mute $param_frames_num -filter_complex $effects_param $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/image-$(date +%s).gif" -y
		else
			ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_mute $param_frames_num $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/image-%03d.jpg" -y
			ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_mute $param_frames_num $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/image-$(date +%s).gif" -y
		fi
		echo "导出完毕!" >> /tmp/ffmpeg.log
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].video_adjustspeed)" == "1" ];then 
		video_speed="setpts=$(uci get ffmpegtool.@ffmpegtool[0].list_adjustspeed)*PTS"
		echo "$srctarget ---- 调速中..." >> /tmp/ffmpeg.log
		ffmpeg -i "$srctarget" -filter:v "${video_speed}" $param_preset -an "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(uci get ffmpegtool.@ffmpegtool[0].src_file_path | cut -d '/' -f$(expr $(uci get ffmpegtool.@ffmpegtool[0].src_file_path | grep -o / | wc -l) + 1) | cut -d '.' -f1)-$(uci get ffmpegtool.@ffmpegtool[0].list_adjustspeed).$param_format" -y
		echo "执行完毕!" >> /tmp/ffmpeg.log
	else
		echo "$srctarget ---- 转换中..." >> /tmp/ffmpeg.log
		if [ "$(uci get ffmpegtool.@ffmpegtool[0].image_effects)" == "1" ];then
			if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_separate)" == "1" ];then
				if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_separate_direction)" == "vertical" ];then
					ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_mute $param_frames_num $param_libx2645 $param_duration -vf "drawbox=x=iw/2-${reduced_pixel}:y=0:w=${bar_size}:h=ih:color=${bar_color}:t=fill" "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/output-$(date +%s)-new.$param_format" -y
				else	
					ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_mute $param_frames_num $param_libx2645 $param_duration -vf "drawbox=x=0:y=ih/2-${reduced_pixel}:w=iw:h=${bar_size}:color=${bar_color}:t=fill" "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/output-$(date +%s)-new.$param_format" -y
				fi
			else
				ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_mute $param_frames_num -filter_complex $effects_param $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(uci get ffmpegtool.@ffmpegtool[0].src_file_path | cut -d '/' -f$(expr $(uci get ffmpegtool.@ffmpegtool[0].src_file_path | grep -o / | wc -l) + 1) | cut -d '.' -f1).$param_format" -y
			fi
		elif [ "$(uci get ffmpegtool.@ffmpegtool[0].video_expan)" == "1" ];then
			if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_expand_direction)" == "left and right" ];then
				ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_mute $param_frames_num -vf "pad=iw+${expand_size}:ih:(ow-iw)/2:0:color=${expand_color}" $param_libx2645 $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/output-$(date +%s).$param_format" -y
			else
				ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_mute $param_frames_num -vf "pad=iw:ih+${expand_size}:0:(oh-ih)/2:color=${expand_color}" $param_libx2645 $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/output-$(date +%s).$param_format" -y
			fi
		else
			ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_mute $param_frames_num $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(uci get ffmpegtool.@ffmpegtool[0].src_file_path | cut -d '/' -f$(expr $(uci get ffmpegtool.@ffmpegtool[0].src_file_path | grep -o / | wc -l) + 1) | cut -d '.' -f1).$param_format" -y
		fi
		echo "转换完成!" >> /tmp/ffmpeg.log
	fi
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].src_select)" == "all files in the directory" ];then
	srctarget="$(ls $(uci get ffmpegtool.@ffmpegtool[0].src_directory_path))"
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_picture)" == "1" ];then 
		echo "警告！警告！导出为图片功能不支持整个目录为输入源的模式,请修改!" >> /tmp/ffmpeg.log
		exit 0
	fi
	for i in $srctarget;do
		ffprobe "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" > /tmp/ffmpeg.log 2>&1
		time_work_v
		echo "$i ---- 转换中..." >> /tmp/ffmpeg.log
		if [ "$(uci get ffmpegtool.@ffmpegtool[0].image_effects)" == "1" ];then
			if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_separate)" == "1" ];then
				if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_separate_direction)" == "vertical" ];then
					ffmpeg $param_starttime $param_endtime -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" $param_mute $param_frames_num $param_libx2645 $param_duration -vf "drawbox=x=iw/2-${reduced_pixel}:y=0:w=${bar_size}:h=ih:color=${bar_color}:t=fill" "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(echo $i | cut -d '.' -f1)-new.$param_format" -y
				else
					ffmpeg $param_starttime $param_endtime -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" $param_mute $param_frames_num $param_libx2645 $param_duration -vf "drawbox=x=0:y=ih/2-${reduced_pixel}:w=iw:h=${bar_size}:color=${bar_color}:t=fill" "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(echo $i | cut -d '.' -f1)-new.$param_format" -y
				fi
			else
				ffmpeg $param_starttime $param_endtime -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" $param_mute $param_frames_num -filter_complex $effects_param $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(echo $i | cut -d '.' -f1).$param_format" -y
			fi
		elif [ "$(uci get ffmpegtool.@ffmpegtool[0].video_adjustspeed)" == "1" ];then 
			video_speed="setpts=$(uci get ffmpegtool.@ffmpegtool[0].list_adjustspeed)*PTS"
			echo "$srctarget ---- 调速中..." >> /tmp/ffmpeg.log
			ffmpeg -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" -filter:v "${video_speed}" $param_preset -an "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(echo $i | cut -d '.' -f1)-$(uci get ffmpegtool.@ffmpegtool[0].list_adjustspeed).$param_format" -y
		else
			if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_expan)" == "1" ];then
				if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_expand_direction)" == "left and right" ];then
					ffmpeg $param_starttime $param_endtime -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" $param_mute $param_frames_num -vf "pad=iw+${expand_size}:ih:(ow-iw)/2:0:color=${expand_color}" $param_libx2645 $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(echo $i | cut -d '.' -f1)-new.$param_format" -y
				else
					ffmpeg $param_starttime $param_endtime -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" $param_mute $param_frames_num -vf "pad=iw:ih+${expand_size}:0:(oh-ih)/2:color=${expand_color}" $param_libx2645 $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(echo $i | cut -d '.' -f1)-new.$param_format" -y
				fi
			else
				ffmpeg $param_starttime $param_endtime -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" $param_mute $param_frames_num $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(echo $i | cut -d '.' -f1).$param_format" -y
			fi
		fi
		echo "转换完成!" >> /tmp/ffmpeg.log
	done
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].src_select)" == "streaming media" ];then
	srctarget="$(uci get ffmpegtool.@ffmpegtool[0].src_stream_path)"
	ffprobe "$srctarget" > /tmp/ffmpeg.log 2>&1
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].dest_select)" == "Sound Card" ];then
		echo "$srctarget ---- 播放中..." >> /tmp/ffmpeg.log
		ffmpeg -i "$srctarget" -f alsa default
		echo "播放完毕!" >> /tmp/ffmpeg.log
	else
		if [ "$(uci get ffmpegtool.@ffmpegtool[0].video_picture)" == "1" ];then 
			echo "$srctarget ---- 导出图片中..." >> /tmp/ffmpeg.log
			if [ "$(uci get ffmpegtool.@ffmpegtool[0].image_effects)" == "1" ];then
				ffmpeg -i "$srctarget" $param_mute $param_frames_num -filter_complex $effects_param $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/image-%03d.jpg" -y
				ffmpeg -i "$srctarget" $param_mute $param_frames_num -filter_complex $effects_param $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/image-$(date +%s).gif" -y
			else
				ffmpeg -i "$srctarget" $param_mute $param_frames_num $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/image-%03d.jpg" -y
				ffmpeg -i "$srctarget" $param_mute $param_frames_num $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/image-$(date +%s).gif" -y
			fi
			echo "导出完毕!" >> /tmp/ffmpeg.log
		else
			echo "$srctarget ---- 导出中..." >> /tmp/ffmpeg.log
			if [ "$(uci get ffmpegtool.@ffmpegtool[0].image_effects)" == "1" ];then
				ffmpeg -i "$srctarget" $param_mute $param_frames_num -filter_complex $effects_param $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/output-$(date +%s).$param_format" -y
			else
				ffmpeg -i "$srctarget" $param_mute $param_frames_num $param_libx2645 $param_preset $param_copy $param_fix_android $param_duration  "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/output-$(date +%s).$param_format" -y
			fi
			echo "导出完毕!" >> /tmp/ffmpeg.log
		fi
	fi
fi

ucidefault

