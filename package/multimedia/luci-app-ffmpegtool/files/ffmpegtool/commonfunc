#!/bin/sh

function ucidefault() {
	rm /tmp/ffmpeg.log 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].streamserver_select="none" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].sampling_rate="none" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].audio_channel="none" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].a_modify_duration="do not modify" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].risingfalling_tone="none" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].a_speed_governing="none" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].volume="none" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].audio_separate="0" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].audio_sept_silence="0" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].audio_merge="0" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].audio_ready="0" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].image_effects="0" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].video_expan="0" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].video_frames="" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].vide_duration="" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].picture_tovideo="" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].screen_merge="" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].video_mute="" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].v_modify_duration="do not modify" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].video_adjustspeed="0" 2>&1 >/dev/null
	uci set ffmpegtool.@ffmpegtool[0].video_ready="0" 2>&1 >/dev/null
	uci commit ffmpegtool 2>&1 >/dev/null
}

function testdestpath() {
	if [ ! -d "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)" ]; then
		mkdir -p "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)"
		chmod 777 -R "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)"
	fi
}

function inittime() {
	hourtime="$(echo $totaltime | cut -d ':' -f1)"
	mintime="$(echo $totaltime | cut -d ':' -f2)"
	sectime="$(echo $totaltime | cut -d ':' -f3)"
	hourtosec="$(expr $hourtime \* 60 \* 60)"
	mintosec="$(expr $mintime \* 60)"
	totalsec="$(expr $hourtosec + $mintosec + $sectime)"
}

function switchtime() {
	if [ "$(expr $endsec / 3600)" -gt 0 ];then
		thehour="$(expr $endsec / 3600)"
		newsec="$(expr $endsec - $(expr $thehour \* 3600))"
		if [ "$newsec" -gt 59 ];then
			themin="$(expr $newsec / 60)"
			thesec="$(expr $newsec - $(expr $themin \* 60))"
			if [ "$themin" -lt 10 ];then
				themin="0$themin"
			fi
			if [ "$thesec" -lt 10 ];then
				thesec="0$thesec"
			fi
		else
			themin="00"
			thesec="$newsec"
			if [ "$thesec" -lt 10 ];then
				thesec="0$thesec"
			fi
		fi
		if [ "$thehour" -lt 10 ];then
			thehour="0$thehour"
		fi
	else
		thehour="00"
		themin=$(expr $endsec / 60)
		thesec=$(expr $endsec - $themin \* 60)
		if [ "$themin" -lt 10 ];then
			themin="0$themin"
		fi
		if [ "$thesec" -lt 10 ];then
			thesec="0$thesec"
		fi
	fi
}

function getheadtime_a() {
	totaltime="$1"
	audio_headtime="$2"
	inittime
	endsec="$audio_headtime"
	switchtime
	param_starttime="-ss $thehour:$themin:$thesec"
}

function gettailtime_a() {
	totaltime="$1"
	audio_tailtime="$2"
	inittime
	endsec="$(expr $totalsec - $audio_tailtime)"
	switchtime
	param_endtime="-to $thehour:$themin:$thesec"
}

function getheadtime_v() {
	totaltime="$1"
	video_headtime="$2"
	inittime
	endsec="$video_headtime"
	switchtime
	param_starttime="-ss $thehour:$themin:$thesec"
}

function gettailtime_v() {
	totaltime="$1"
	video_tailtime="$2"
	inittime
	endsec="$(expr $totalsec - $video_tailtime)"
	switchtime
	param_endtime="-to $thehour:$themin:$thesec"
}

function time_work_a() {
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].a_modify_duration)" == "specific time period" ];then
		param_starttime="-ss $(uci get ffmpegtool.@ffmpegtool[0].audio_starttime)"
		param_endtime="-to $(uci get ffmpegtool.@ffmpegtool[0].audio_endtime)"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].a_modify_duration)" == "cut head and tail" ];then
		totaltime="$(cat /tmp/ffmpeg.log | grep Duration | cut -d '.' -f1 | awk '{print$2}')"
		headtime="$(uci get ffmpegtool.@ffmpegtool[0].audio_headtime)"
		tailtime="$(uci get ffmpegtool.@ffmpegtool[0].audio_tailtime)"
		getheadtime_a "$totaltime" "$headtime"
		gettailtime_a "$totaltime" "$tailtime"
	fi
}

function time_work_v() {
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].v_modify_duration)" == "specific time period" ];then
		param_starttime="-ss $(uci get ffmpegtool.@ffmpegtool[0].video_starttime)"
		param_endtime="-to $(uci get ffmpegtool.@ffmpegtool[0].video_endtime)"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].v_modify_duration)" == "cut head and tail" ];then
		totaltime="$(cat /tmp/ffmpeg.log | grep Duration | cut -d '.' -f1 | awk '{print$2}')"
		headtime="$(uci get ffmpegtool.@ffmpegtool[0].video_headtime)"
		tailtime="$(uci get ffmpegtool.@ffmpegtool[0].video_tailtime)"
		getheadtime_v "$totaltime" "$headtime"
		gettailtime_v "$totaltime" "$tailtime"
	fi
}

function pictovideo() {
	resolution="-s $(uci get ffmpegtool.@ffmpegtool[0].picture_resolution)"
	if [ ! -n "$(uci get ffmpegtool.@ffmpegtool[0].video_frames_num)" ];then
		uci set ffmpegtool.@ffmpegtool[0].video_frames_num=1
		uci commit ffmpegtool
	fi
	param_frames_num="-r $(uci get ffmpegtool.@ffmpegtool[0].video_frames_num)"
	if [ ! -n "$(uci get ffmpegtool.@ffmpegtool[0].vide_duration)" ];then
		uci set ffmpegtool.@ffmpegtool[0].vide_duration=10
		uci commit ffmpegtool
	fi
	param_duration="-t $(uci get ffmpegtool.@ffmpegtool[0].vide_duration)"
	ffprobe "$input" > /tmp/ffmpeg.log 2>&1
	echo " $input ----> 图片转换视频中... " >> /tmp/ffmpeg.log
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].image_effects)" == "1" ];then
		if [ "$pic" == "" ];then
			ffmpeg -loop 1 -f image2 $param_frames_num $param_duration -i "$input" -filter_complex $effects_param $resolution $param_libx2645 $param_copy $param_fix_android "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$(date +%s).$param_format" -y
		else
			ffmpeg -loop 1 -f image2 $param_frames_num $param_duration -i "$input" -filter_complex $effects_param $resolution $param_libx2645 $param_copy $param_fix_android "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$pic.tmp.ts" -y
		fi
	else
		if [ "$pic" == "" ];then
			ffmpeg -loop 1 -f image2 $param_frames_num $param_duration -i "$input" $resolution $param_libx2645 $param_copy $param_fix_android "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/merge-$(date +%s).$param_format" -y
		else
			ffmpeg -loop 1 -f image2 $param_frames_num $param_duration -i "$input" $resolution $param_libx2645 $param_copy $param_fix_android "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$pic.tmp.ts" -y
		fi
	fi
	echo "转换完毕!" >> /tmp/ffmpeg.log
}

